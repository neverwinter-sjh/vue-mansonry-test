{"remainingRequest":"/Users/jaehosim/Documents/Workspace/vue-masonry-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaehosim/Documents/Workspace/vue-masonry-test/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/jaehosim/Documents/Workspace/vue-masonry-test/src/App.vue","mtime":1623758092944},{"path":"/Users/jaehosim/Documents/Workspace/vue-masonry-test/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehosim/Documents/Workspace/vue-masonry-test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jaehosim/Documents/Workspace/vue-masonry-test/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jaehosim/Documents/Workspace/vue-masonry-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jaehosim/Documents/Workspace/vue-masonry-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2FwcCB7CiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmOwogIG1heC13aWR0aDogMTQwMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBwYWRkaW5nOiA4MHB4IDI0cHg7Cn0KQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkgewogICNhcHAgewogICAgcGFkZGluZy1sZWZ0OiA4MHB4OwogICAgcGFkZGluZy1yaWdodDogODBweDsKICB9Cn0KaDIgewogIGZvbnQtc2l6ZTogMzBweDsKICBtYXJnaW46IDAgMCAyNHB4Owp9Cmg1IHsKICBmb250LXNpemU6IDE4cHg7CiAgbGluZS1oZWlnaHQ6IDEuNTsKICBtYXJnaW46IDAgMCA4cHg7Cn0KcCB7CiAgZm9udC1zaXplOiAxN3B4OwogIGxpbmUtaGVpZ2h0OiAxLjU7CiAgZm9udC13ZWlnaHQ6IDQwMDsKICBtYXJnaW46IDA7CiAgd29yZC1icmVhazogYnJlYWstd29yZDsKfQouaXRlbSB7CiAgcGFkZGluZzogMTZweCAyNHB4OwogIGJvcmRlci1yYWRpdXM6IDNweDsKICBiYWNrZ3JvdW5kOiAjRjVGNUY1Owp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <h2>Masonry: append 100</h2>\n\n    <vue-masonry-wall :items=\"items\" :options=\"options\" @append=\"append\">\n      <template v-slot:default=\"{item}\">\n        <div class=\"item\">\n          <h5>{{ item.title }}</h5>\n          <p>{{ item.content }}</p>\n        </div>\n      </template>\n    </vue-masonry-wall>\n  </div>\n</template>\n\n<script>\nimport VueMasonryWall from \"vue-masonry-wall\";\n\nfunction content() {\n  const length = Math.random() * 300 + 30\n  let result = '';\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\nexport default {\n  name: 'ServeDev',\n  components: {\n    VueMasonryWall\n  },\n  data() {\n    return {\n      options: {\n        width: 300,\n        padding: {\n          default: 12,\n          2: 8,\n          3: 8,\n        }\n      },\n      items: [\n        {title: 'Item 0', content: content()},\n        {title: 'Item 1', content: content()},\n        {title: 'Item 2', content: content()},\n        {title: 'Item 3', content: content()},\n      ]\n    }\n  },\n  methods: {\n    /**\n     * I am mocking a API call that load 20 objects at a time.\n     */\n    append() {\n      if (this.items.length > 100) {\n        return\n      }\n      for (let i = 0; i < 20; i++) {\n        this.items.push({title: `Item ${this.items.length}`, content: content()})\n      }\n    }\n  }\n}\n</script>\n\n\n<style>\n#app {\n  font-family: 'Roboto', sans-serif;\n  max-width: 1400px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 80px 24px;\n}\n@media (min-width: 1200px) {\n  #app {\n    padding-left: 80px;\n    padding-right: 80px;\n  }\n}\nh2 {\n  font-size: 30px;\n  margin: 0 0 24px;\n}\nh5 {\n  font-size: 18px;\n  line-height: 1.5;\n  margin: 0 0 8px;\n}\np {\n  font-size: 17px;\n  line-height: 1.5;\n  font-weight: 400;\n  margin: 0;\n  word-break: break-word;\n}\n.item {\n  padding: 16px 24px;\n  border-radius: 3px;\n  background: #F5F5F5;\n}\n</style>"]}]}